{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\monster-rolodex\\\\src\\\\App.js\";\nimport React from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './card-list/card-list.component';\nimport { SearchBox } from './search-box/search-box.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // String: 'Hello Umma'\n      // monsters: [ //hard coding data inside react\n      //     {\n      //         name: 'Umma'\n      //             id: 'ert'\n      //     },\n      //     {\n      //         name: 'Dracula'\n      //     },\n      //     {\n      //         name: 'John'\n      //     },\n      //     {\n      //         name: 'Zombie'\n      //     }\n      // ]\n      monsters: []\n    }; //https://jsonplaceholder.typicode.com/users\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users') //fetch gives a promise that returns a respond. Fetch() is use to consume an API.\n    .then(Response => Response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filterMonsters = monsters.filter(monster => monster.name.includes(searchField));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        placeholder: 'Search for Monster',\n        handleChange: e => this.setState({\n          searchField: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: filterMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/monster-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","state","monsters","componentDidMount","fetch","then","Response","json","users","setState","render","searchField","filterMonsters","filter","monster","name","includes","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAAQC,SAAR,QAAwB,mCAAxB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACvBI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,QAAQ,EAAE;AAjBD,KAAb,CAFS,CAoBR;AACJ;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CAAoD;AAApD,KACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAEM;AAAX,KAAd,CAFf;AAGH;;AACDE,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACR,MAAAA,QAAD;AAAWS,MAAAA;AAAX,QAA0B,KAAKV,KAArC;AACA,UAAMW,cAAc,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBL,WAAtB,CAA3B,CAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAGI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,oBAAxB;AAA8C,QAAA,YAAY,EAAEM,CAAC,IAAG,KAAKR,QAAL,CAAc;AAACE,UAAAA,WAAW,EAAEM,CAAC,CAACC,MAAF,CAASC;AAAvB,SAAd;AAAhE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxCsB;;AA2C3B,eAAeb,GAAf","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Component} from 'react';\nimport { CardList } from './card-list/card-list.component';\nimport {SearchBox} from './search-box/search-box.component';\n\nclass App extends Component{\n    constructor(){\n        super();\n        this.state = {\n            // String: 'Hello Umma'\n            // monsters: [ //hard coding data inside react\n            //     {\n            //         name: 'Umma'\n            //             id: 'ert'\n            //     },\n            //     {\n            //         name: 'Dracula'\n            //     },\n            //     {\n            //         name: 'John'\n            //     },\n            //     {\n            //         name: 'Zombie'\n            //     }\n            // ]\n            monsters: []\n        }//https://jsonplaceholder.typicode.com/users\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users') //fetch gives a promise that returns a respond. Fetch() is use to consume an API.\n        .then(Response => Response.json())\n        .then(users => this.setState({monsters: users}))\n    }\n    render(){\n        const {monsters, searchField} = this.state\n        const filterMonsters = monsters.filter(monster => monster.name.includes(searchField));\n        return ( \n            <div className=\"App\">\n                {/* <h1>{this.state.String}</h1>\n                <button onClick={ () => this.setState({String: 'How you doing'})}>Click Me</button> */}\n                <SearchBox placeholder={'Search for Monster'} handleChange={e =>this.setState({searchField: e.target.value})} />\n                <CardList monsters={filterMonsters}></CardList>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}